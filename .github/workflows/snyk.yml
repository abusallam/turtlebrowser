name: Run Snyk on Conan

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '55 19 * * *'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macos-10.15, windows-2019]

    runs-on: ${{ matrix.os }}
    
    env:
      CONAN_USER_HOME: "${{ github.workspace }}/release"
      CONAN_USER_HOME_SHORT: "${{ github.workspace }}/release/short"
      CONAN_SYSREQUIRES_MODE: enabled
      INSTALL_DIR: ${{ github.workspace }}/install/

    steps:
    - uses: actions/checkout@v2

    - name: Cache Conan modules
      id: cache-conan
      uses: turtlebrowser/conan-cache@master
      with:
          bot_name: turtlebrowser-bot
          bot_token: ${{ secrets.CACHE_REPO_TOKEN }}
          cache_name: turtlebrowser/conan-cache-turtlebrowser
          key: host-${{ runner.os }}-target-${{ runner.os }}-${{ matrix.os }}-${{ hashFiles('conanfile.py') }}
          target_os: ${{ runner.os }}-${{ matrix.os }}
          lfs_limit: 60

#    - name: Install coreutils for macOS for Snyk
#      if: matrix.os == 'macOS-latest' || matrix.os == 'macos-10.15'
#      run: brew install coreutils

#    - name: Install Snyk
#      id: snyk 
#      uses: snyk/actions/setup@master
#      with:
#        snyk-version: v1.391.0

    - name: Install Snyk
      id: snyk
      uses: turtlebrowser/get-snyk@main

    - name: Snyk version
      run: echo "${{ steps.snyk.outputs.version }}"

#   - name: Get Conan
#     run: |
#       pip3 install wheel setuptools
#       pip3 install conan --upgrade
#       mkdir build
        
#    - name: Fix Path on Ubuntu
#      if: matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-18.04' ||  matrix.os == 'ubuntu-16.04'
#      run: echo "/home/runner/.local/bin" >> $GITHUB_PATH

#    - name: Get Conan Dependencies
#      working-directory: build
#      run: cmake -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }} -DCMAKE_BUILD_TYPE=Release ..

    - name: Run snyk on .conan/data
      working-directory: ${{ env.CONAN_USER_HOME }}/.conan/data
      run: snyk source test
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
